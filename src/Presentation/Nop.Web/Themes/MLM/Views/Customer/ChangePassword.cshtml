@model ChangePasswordModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-change-password-page");
    var returnUrl = Context.Request.Query["returnUrl"];
}
@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.ChangePassword })
}

<div class="page account-page change-password-page">
    <div class="page-body  login-custom custom-register">
        <h3 class="strong-login1">
            @T("Account.ChangePassword")
        </h3>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerChangePasswordTop, additionalData = Model })
        <form asp-route="CustomerChangePassword" method="post" autocomplete="off" asp-route-returnurl="@returnUrl">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>

            <div class="fieldset">
                <div class="input-fields">
                    <div class="email-field">
                        <div class="email-label-container">
                            <label class="label-email" asp-for="OldPassword"></label>
                        </div>
                        <div class="component-67">
                            <div class="vuesaxlinearuser-parent">

                                <input asp-for="OldPassword" class="frame-input" placeholder="Enter Old Password" type="password" />
                            </div>
                            <img class="vuesaxlineareye-icon" alt="" src="images/vuesaxlineareye.svg">
                        </div>
                        <span asp-validation-for="OldPassword"></span>

                    </div>
                    <div class="email-field">
                        <div class="email-label-container">
                            <label class="label-email" asp-for="NewPassword"></label>
                        </div>
                        <div class="component-67">
                            <div class="vuesaxlinearuser-parent">

                                <input asp-for="NewPassword" class="frame-input" placeholder="Enter New Password" type="password" />
                            </div>
                            <img class="vuesaxlineareye-icon" alt="" src="images/vuesaxlineareye.svg">
                        </div>
                        <span asp-validation-for="NewPassword"></span>

                    </div>
                    <div class="email-field">
                        <div class="email-label-container">
                            <label class="label-email" asp-for="ConfirmNewPassword"></label>
                        </div>
                        <div class="component-67">
                            <div class="vuesaxlinearuser-parent">

                                <input asp-for="ConfirmNewPassword" class="frame-input" placeholder="Confirm New Password" type="password" />
                            </div>
                            <img class="vuesaxlineareye-icon" alt="" src="images/vuesaxlineareye.svg">
                        </div>
                        <span asp-validation-for="ConfirmNewPassword"></span>

                    </div>

                </div>
            </div>
            <button class="register-button" type="submit" >
                <div class="register-wrapper">
                    <b class="register">@T("Account.ChangePassword.Button")</b>
                </div>
            </button>
        </form>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerChangePasswordBottom, additionalData = Model })
    </div>
</div>