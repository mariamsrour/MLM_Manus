@* @model IList<ProductOverviewModel>

@using Nop.Core.Domain.Catalog

@inject IViewComponentSelector viewComponentSelector

@if (Model.Count > 0)
{
    <div class="block block-recently-viewed-products">
        <div class="title">
            <strong>@T("Products.RecentlyViewedProducts")</strong>
        </div>
        <div class="listbox">
            <ul class="list">
                @for (var i = 0; i < Model.Count; i++)
                {
                    var product = Model[i];
                    var picture = product.PictureModels.FirstOrDefault();
                    <li @(i == Model.Count - 1 ? @Html.Raw(" class=\"last\"") : null)>
                        <a class="rvp-name" href="@(Url.RouteUrl<Product>(new { SeName = product.SeName }))">
                            @if (picture != null && !string.IsNullOrEmpty(picture.ImageUrl))
                            {
                                @if (viewComponentSelector.SelectComponent("LazyLoadImage") != null)
                                {
                                    @await Component.InvokeAsync("LazyLoadImage", new (string Key, string Value)[]
                                    {
                                        ("src", picture.ImageUrl),
                                        ("alt", picture.AlternateText),
                                        ("title", picture.Title)
                                    })
                                }
                                else
                                {
                                    <img alt="@picture.AlternateText" src="@picture.ImageUrl" title="@picture.Title" />
                                }
                            }
                            @product.Name
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
} *@