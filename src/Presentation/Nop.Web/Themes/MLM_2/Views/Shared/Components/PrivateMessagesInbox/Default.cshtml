@model PrivateMessageListModel
@using Nop.Core
@inject IWorkContext workContext


@{
    var currentCustomer = await workContext.GetCurrentCustomerAsync();

}

@{
    var supportRtl = (await workContext.GetWorkingLanguageAsync()).Rtl;

    if (supportRtl)
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/privatemessagesinbox.rtl.css");

    }
    else
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/privatemessagesinbox.css");

    }
}




<div class="private-messages-box">
    @*   <script asp-location="Footer">
        $(function() {
            $('#select-all-inbox').on('click', function () {
                $('#pm-inbox-table .rowcheckbox').prop('checked', $(this).is(':checked')).trigger('change');
            });

            $('#pm-inbox-table .rowcheckbox').on('change', function (e) {
                var numChkBoxes = $('#pm-inbox-table .rowcheckbox').length;
                var numChkBoxesChecked = $('#pm-inbox-table .rowcheckbox:checked').length;
                $('#select-all-inbox').prop('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
            });
        });
    </script> *@
    @if (Model.Messages.Count > 0)
    {

        @for (var i = 0; i < Model.Messages.Count; i++)
        {
            <div class="rectangle-parent2">

                @{
                    var item = Model.Messages[i];
                }
                <div class="msg-row">
                    <img src="@item.AdPictureUrl" class="ad-pic" />

                    <div class="thred-details">
                        <div class="subject @(((item.ToCustomerId == currentCustomer.Id && item.IsRead) || item.FromCustomerId == currentCustomer.Id)?"read":"")">
                            @if (item.FromCustomerId == currentCustomer.Id)
                            {
                                @Html.RouteLink(item.Subject, "ViewPM", new { adId = item.AdId, from = item.FromCustomerId, to = item.ToCustomerId }, new { @class = (item.IsRead) ? "pm-read" : "pm-unread" })

                            }
                            else
                            {
                                @Html.RouteLink(item.Subject, "ViewPM", new { adId = item.AdId, from = item.ToCustomerId, to = item.FromCustomerId }, new { @class = (item.IsRead) ? "pm-read" : "pm-unread" })

                            }
                        </div>

                        <div class="msg @(((item.ToCustomerId == currentCustomer.Id && item.IsRead) || item.FromCustomerId == currentCustomer.Id)?"read":"")">
                                @item.Message
                            </div>
                       
                     
                            <div class="customer-details">
                                @if (item.FromCustomerId == currentCustomer.Id)
                                {
                                    <img src="@item.ToCustomerPictureUrl" class="customer-pic" />
                                <div class="customer-name @(((item.ToCustomerId == currentCustomer.Id && item.IsRead) || item.FromCustomerId == currentCustomer.Id)?"read":"")">
                                        @item.CustomerToName
                                    </div>
                                }
                                else
                                {
                                    <img src="@item.FromCustomerPictureUrl" class="customer-pic" />
                                <div class="customer-name @(((item.ToCustomerId == currentCustomer.Id && item.IsRead) || item.FromCustomerId == currentCustomer.Id)?"read":"")">
                                        @item.CustomerFromName
                                    </div>
                                }
                            </div>
                        </div>
                       
                        <div class="date-sec">
                            <div class="date">
                                @item.CreatedOn.RelativeFormat()
                            </div>
                            <button type="button" class="remove-btn" data-id="@item.AdId" data-toId="@item.ToCustomerId" data-fromId="@item.FromCustomerId"><img src="~/images/trash.png" /> Remove </button>
                        </div>
                    </div>
                </div>

            }

            
                var pager = await Html.PagerAsync(Model.PagerModel);
                if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
                {
                    <div class="pager">
                        @pager
                    </div>
                }
            
            
        @*     <div class="buttons">
                <button type="submit" class="button-1 delete-selected-pm-button" name="delete-inbox">@T("PrivateMessages.Inbox.DeleteSelected")</button>
                <button type="submit" name="mark-unread" class="button-2 mark-unread-pm-button">@T("PrivateMessages.Inbox.MarkAsUnread")</button>
            </div> *@
    }
    else
    {
        <div class="no-data">
            <img src="~/images/Empty.png" alt="@T("PrivateMessages.Inbox.NoItems")" />

            <div class="no-data">
                @T("PrivateMessages.Inbox.NoItems")
            </div>
        </div>
    }
</div>