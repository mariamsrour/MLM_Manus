@model ClaimModel
@using Nop.Core
@inject IWorkContext workContext

@{
    var supportRtl = (await workContext.GetWorkingLanguageAsync()).Rtl;

    if (supportRtl)
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/AddClaim.rtl.css");

    }
    else
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/AddClaim.css");

    }
}
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.AddClaim").Text);
    //page class
    //NopHtml.AppendPageCssClassParts("html-registration-page");
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.17/css/intlTelInput.min.css" />



<div class="page registration-result-page">
    <div class="page-title">
        <h1>@T("Claims.Add")</h1>
    </div>
    <div class="page-body">

        <div class="container">
            <div class="form-container">
                <form asp-route="Add" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off" class="claim-form" enctype="multipart/form-data">
                    <!-- Claim Title -->
                    <div class="form-group">
                        <label for="claimTitle" class="form-label">Claim Title</label>
                        <div class="input-wrapper">
                            <input type="text"
                                   asp-for="Title"
                                   placeholder="Enter Claim Title"
                                   class="form-input"
                                   required />
                        </div>
                        <span asp-validation-for="Title"></span>

                    </div>

                    <!-- Your Name -->
                    <div class="form-group">
                        <label for="yourName" class="form-label">Your Name</label>
                        <div class="input-wrapper">
                            <input type="text"
                                   asp-for="Name"
                                   placeholder="Enter Your Name"
                                   class="form-input"
                                   required />
                        </div>
                        <span asp-validation-for="Name"></span>

                    </div>

                    <div class="form-group">
                        <label for="yourName" class="form-label">Ad ID</label>
                        <div class="input-wrapper">
                            <input type="text"
                                   asp-for="AdId"
                                   placeholder="#xxx"
                                   class="form-input"
                                   required />
                        </div>
                        <span asp-validation-for="Name"></span>

                    </div>

                    <!-- Phone Number -->
                    <div class="form-group">
                        <label for="phoneNumber" class="form-label">Phone Number</label>
                        <div class="phone-input-container ">
                            <input type="tel"
                                   asp-for="PhoneNumber"
                                   placeholder="50xxxxxxxxx"
                                   class="phone-input-count"
                                   required />
                        </div>
                        <span asp-validation-for="PhoneNumber"></span>

                    </div>

                    <!-- Email -->
                    <div class="form-group">
                        <label for="email" class="form-label">Email</label>
                        <div class="input-wrapper">
                            <input type="email"
                                   asp-for="Email"
                                   placeholder="Enter Email"
                                   class="form-input" />
                        </div>
                        <span asp-validation-for="Email"></span>

                    </div>

                    <!-- Your Message -->
                    <div class="form-group">
                        <label for="message" class="form-label">Your Message</label>
                        <div class="textarea-wrapper">
                            <textarea asp-for="Message"
                                      placeholder="Enter Your Message"
                                      class="form-textarea"
                                      rows="8"></textarea>
                        </div>
                    </div>

                    <!-- Add Attachment -->
                    <div class="attachment-section">
                        <button type="button" id="attachmentBtn" class="attachment-btn">
                            <div class="attachment-icon"> 
                                <img src="~/images/attach-square.png" />
                            </div>
                            <span>Add Attachment</span>
                        </button>
                        <input type="file" asp-for="Attachments" multiple style="display: none;" />
                        <div id="fileList" class="file-list"></div>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="submit-btn">
                        Submit
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
<script>
        $(document).ready(function() {
        // Initialize international telephone input
        const phoneInput = $("#PhoneNumber")[0];
        const iti = window.intlTelInput(phoneInput, {
            initialCountry: "sa", // Default to SA
            preferredCountries: ["sa", "ae", "eg", "us"],
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        // Form data object
        let formData = {
            claimTitle: '',
            yourName: '',
            phoneNumber: '',
            email: '',
            message: '',
            attachments: []
        };

        // Update form data when inputs change
        // function updateFormData() {
        //     formData.claimTitle = $('#claimTitle').val();
        //     formData.yourName = $('#yourName').val();
        //     formData.phoneNumber = iti.getNumber();
        //     formData.email = $('#email').val();
        //     formData.message = $('#message').val();
        // }

        // Input event handlers
        // $('#claimTitle, #yourName, #email, #message').on('input', function() {
        //     updateFormData();
        // });

        $('.phone-input-count').on('input', function() {
            formData.phoneNumber = iti.getNumber();
        });

        // File attachment handling
        $('#attachmentBtn').on('click', function() {
            $('#Attachments').click();
        });

        $('#Attachments').on('change', function(e) {
            const files = e.target.files;
            if (files.length > 0) {
                // Clear previous attachments
                formData.Attachments = [];
                $('#fileList').empty();

                // Add new files
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const fileId = files[i].fileId;
                    console.log(fileId);//"file_" + i
                    formData.Attachments.push({ file, id: fileId });

                    // Display file in list
                    const fileItem = $(`<div class="file-item" data-id="${fileId}">  </div>`);
                        fileItem.html(`${file.name} <img src="images/check-circle-w.png" /> <button type="button" class="delete-image">&times;</button>`);
                    $('#fileList').append(fileItem);
                }

                // Show success message
                showNotification('Files attached successfully!', 'success');
            }
        });

            $('#fileList').on('click', '.delete-image', function() {
        const fileItem = $(this).closest('.file-item');
        const fileId = fileItem.data('id');

        // Remove from formData.attachments
        formData.Attachments = formData.Attachments.filter(f => f.id !== fileId);

        // Remove from UI
        fileItem.remove();
    });

        // Form validation
        // function validateForm() {
        //     const errors = [];

        //     if (!formData.claimTitle.trim()) {
        //         errors.push('Claim title is required');
        //     }

        //     if (!formData.yourName.trim()) {
        //         errors.push('Your name is required');
        //     }

        //     if (!iti.isValidNumber()) {
        //         errors.push('Please enter a valid phone number');
        //     }

        //     if (!formData.email.trim()) {
        //         errors.push('Email is required');
        //     } else if (!isValidEmail(formData.email)) {
        //         errors.push('Please enter a valid email address');
        //     }

        //     if (!formData.message.trim()) {
        //         errors.push('Message is required');
        //     }

        //     return errors;
        // }

        // // Email validation helper
        // function isValidEmail(email) {
        //     return true;
        // }

        // File size formatting helper
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Notification system
        function showNotification(message, type = 'info') {
            // Remove existing notifications
            $('.notification').remove();

            const notification = $(`
                <div class="notification notification-${type}" style="
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    padding: 12px 20px;
                    border-radius: 8px;
                    color: white;
                    font-weight: 500;
                    z-index: 1000;
                    animation: slideIn 0.3s ease;
                    ${type === 'success' ? 'background-color: #10b981;' : ''}
                    ${type === 'error' ? 'background-color: #ef4444;' : ''}
                    ${type === 'info' ? 'background-color: #3b82f6;' : ''}
                ">
                    ${message}
                </div>
            `);

            $('body').append(notification);

            // Auto remove after 3 seconds
            setTimeout(() => {
                notification.fadeOut(300, function() {
                    $(this).remove();
                });
            }, 3000);
        }

        // Add CSS for notification animation
        $('<style>')
            .prop('type', 'text/css')
            .html(`
                @@keyframes slideIn {
                    from {
                        transform: translateX(100%);
                        opacity: 0;
                    }
                    to {
                        transform: translateX(0);
                        opacity: 1;
                    }
                }
            `)
            .appendTo('head');

        // Form submission
        // $('#claimForm').on('submit', function(e) {
            // e.preventDefault();

            // // Update form data
            // updateFormData();

            // // Validate form
            // const errors = validateForm();

            // if (errors.length > 0) {
            //     showNotification(errors.join(', '), 'error');
            //     return;
            // }

            // // Show loading state
            // const submitBtn = $('.submit-btn');
            // submitBtn.addClass('loading').prop('disabled', true);

            // // Simulate form submission
            // setTimeout(() => {
            //     console.log('Form submitted successfully!', formData);
            //     showNotification('Claim submitted successfully!', 'success');

            //     // Reset form
            //     $('#claimForm')[0].reset();
            //     $('#fileList').empty();
            //     formData.attachments = [];

            //     // Remove loading state
            //     submitBtn.removeClass('loading').prop('disabled', false);
            // }, 2000);
        // });

        // Real-time validation feedback
        $('#claimTitle, #yourName, #email, #message').on('blur', function() {
            const field = $(this);
            const value = field.val().trim();

            if (!value) {
                field.addClass('error');
            } else {
                field.removeClass('error');
            }
        });

        $('#email').on('blur', function() {
            const field = $(this);
            const value = field.val().trim();

            if (value && !isValidEmail(value)) {
                field.addClass('error');
            } else if (value) {
                field.removeClass('error');
            }
        });

        // Phone number validation
        $('#.phone-input-count').on('blur', function() {
            const field = $(this);

            if (!iti.isValidNumber()) {
                field.addClass('error');
            } else {
                field.removeClass('error');
            }
        });

        // Add error styles
        $('<style>')
            .prop('type', 'text/css')
            .html(`
                .error {
                    border-color: #dc2626 !important;
                    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.1) !important;
                }
            `)
            .appendTo('head');
    });


</script>