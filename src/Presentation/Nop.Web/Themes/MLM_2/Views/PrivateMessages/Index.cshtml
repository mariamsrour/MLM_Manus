@model PrivateMessageIndexModel
@{
    Layout = "_ColumnsTwoCustom";
    //title
    NopHtml.AddTitleParts(T("PageTitle.PrivateMessages").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-private-messages");
    NopHtml.AppendPageCssClassParts("html-private-messages-page");


}
@using Nop.Core
@inject IWorkContext workContext

@{
    var supportRtl = (await workContext.GetWorkingLanguageAsync()).Rtl;

    if (supportRtl)
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/privatemsgindex.rtl.css");

    }
    else
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/privatemsgindex.css");

    }
}


@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.Messages })
}


<section class="container-wrapper">
    <div class="container3">
        <div class="login-benefits">
            <div class="login-benefits-container">
                <div class="login-benefit-details">
                    <div class="benefit-description">
                        <div class="strong-login">
                            <h3 class="strong-login1">
                                @T("PrivateMessages.PrivateMessages")
                            </h3>
                        </div>

                        <div class="status-wrapper">
                            <button class="status-btn active" data-active="true">
                                All Messages @* <span class="count"> @(Model.Where(x => x.IsActive).Count()) </span> *@
                            </button>

                            @* <button class="status-btn" data-active="false">
                                @T("PrivateMessages.SentItems") @* <span class="count"> @(Model.Where(x => !x.IsActive).Count()) </span> 
                            </button> *@
                        </div>
                    </div>
                </div>
            </div>
  
        </div>
        <div id="active">
            @await Component.InvokeAsync(typeof(PrivateMessagesInboxViewComponent), new { pageNumber = Model.InboxPage, tab = "inbox" })

        </div>

    </div>

</section>


<!-- Confirmation Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="confirmText">Are you sure you want to perform this action?</p>
            </div>
            <div class="modal-footer">
                <button id="confirmActionBtn" class="btn pause-btn">Yes, Confirm</button>
                <button type="button" class="btn pause-btn-rev" onclick="closeConfirm()" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <div class="modal-body">
                <p class="text-success fw-bold">Action completed successfully!</p>
                <button type="button" class="btn pause-btn mt-2 " onclick="close()" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script>
                                    $(document).ready(function() {
        $('.status-btn').on('click', function() {
            // Toggle active state between siblings
            $(this).addClass('active').siblings('.status-btn').removeClass('active');
            if ($(this).attr("data-active") === "true" ) {
                $("#active").removeClass("hide");
                $("#inactive").addClass("hide");

            } else {
                 $("#inactive").removeClass("hide");
                $("#active").addClass("hide");
            }
        });
    });
</script>


<script>

    var adId = 0;
    var toId = 0;
    var fromId = 0;

               function closeConfirm(){
                   const modalElement = document.getElementById('confirmModal');
            const modal = new bootstrap.Modal(modalElement);
    modal.hide();


    }

        function close(){
                    const modalElement = document.getElementById('successModel');
            const modal = new bootstrap.Modal(modalElement);
    modal.hide();

    }

    $(document).ready(function () {


           function closeConfirm(){
                   const modalElement = document.getElementById('confirmModal');
            const modal = new bootstrap.Modal(modalElement);
    modal.hide();


    }

        function close(){
                    const modalElement = document.getElementById('successModel');
            const modal = new bootstrap.Modal(modalElement);
    modal.hide();

    }

    $('.remove-btn').on('click', function () {
        adId = $(this).data('id');
        toId = $(this).data('toId');
        fromId = $(this).data('fromId');


    

        $('#confirmText').text('Are you sure you want to delete this thread?');
        const modalElement = document.getElementById('confirmModal');
            const modal = new bootstrap.Modal(modalElement);
    modal.show();
    });



    $('#confirmActionBtn').click(function () {

        $.ajax({
            type: 'POST',
            url: '/PrivateMessages/DeletePM',
            data: { adId: adId, to:toId, from:fromId  },
            success: function () {
                location.reload();
            },
            error: function () {
                alert('Something went wrong. Please try again.');
            }
        });
    });

    });



</script>



