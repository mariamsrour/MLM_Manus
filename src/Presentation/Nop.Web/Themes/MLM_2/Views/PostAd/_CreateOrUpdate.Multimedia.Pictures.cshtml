@model Nop.Web.Areas.Admin.Models.Catalog.ProductModel
@using Nop.Core
@inject IWorkContext workContext

@{
    var supportRtl = (await workContext.GetWorkingLanguageAsync()).Rtl;

    if (supportRtl)
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/createorupdatepictures.rtl.css");

    }
    else
    {
        NopHtml.AppendCssFileParts("~/Themes/MLM_2/Content/css/createorupdatepictures.css");

    }
}
    <style>
    .spinner {
        border: 4px solid rgba(0, 0, 0, 0.1);
        width: 36px;
        height: 36px;
        border-radius: 50%;
        border-left-color: #383375;
        animation: spin 1s linear infinite;
        margin: auto;
    }

    @@keyframes spin {
        to

    {
        transform: rotate(360deg);
    }

    }

    .img-loader {
        text-align: center;
        display: flex;
        gap: 10px;
        align-items: end;
        font-size: 14px;
        color: #383375;
    }
    </style>

<div id="imagePreviewGrid" class="row mt-3">
    @if (Model.ProductPictureModels != null && Model.ProductPictureModels.Any())
    {
        foreach (var image in Model.ProductPictureModels)
        {
            <div class="component-263" data-id="@image.Id">
                <img src="@image.PictureUrl" alt="Preview" />
                <button type="button" class="delete-image">&times;</button>
            </div>
        }
    }

</div>



<div class="form-group" style="display:flex;gap:20px;" >
    <input type="file" id="tempImageUpload" name="files" multiple  class="form-control select-image-container" />
    <div id="imageUploadLoader" class="img-loader" style="display: none; text-align: center;">
        <div class="spinner"></div>
        <p>Uploading images...</p>
    </div>
</div>
<span id="imageUploadError" class="text-danger" style="display:none;font-size: 11px;">* Please upload at least one image.</span>



<script>
    $(document).ready(function () {

        function loadTempImages() {
            $.get('/PostAd/GetTempProductImages', function (images) {
                const container = $('#imagePreviewGrid');
               // container.empty();

                images.forEach(image => {
                    const imageHtml = `
                        <div class="component-263" data-id="${image.id}">
                            <img src="${image.url}" alt="Preview" />
                            <button type="button" class="delete-image">&times;</button>
                        </div>`;
                    container.append(imageHtml);
                });
            });
        }

        $('#tempImageUpload').on('change', function () {
                $('#imageUploadLoader').show();


            const files = this.files;
            if (files.length === 0) return;

            const formData = new FormData();

            for (let i = 0; i < files.length; i++) {
                formData.append("files", files[i]); // "files" matches IFormFileCollection param name
            }

            $.ajax({
                url: '/PostAd/UploadTempProductImage',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function () {
                    loadTempImages(); // Refresh image gallery
                                $('#imageUploadLoader').hide();

                },
                error: function (xhr) {
                    alert('Upload failed: ' + xhr.responseText);
                }
            });

        });

        $('#imagePreviewGrid').on('click', '.delete-image', function () {
            const imageBox = $(this).closest('.component-263');
            const imageId = imageBox.data('id');

            $.post('/PostAd/DeleteTempProductImage', { id: imageId }, function () {
                loadTempImages();
            });
        });

        // Initial load
        loadTempImages();
    });
</script>

